# .github/workflows/release.yml
name: Create Release

on:
  workflow_dispatch:

env:
  REGISTRY_ID: ${{ secrets.YC_REGISTRY_ID }}
  IMAGE_NAME: app

jobs:
  build-and-publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
    steps:
      - name: Checkout code
        # fetch-depth: 0 –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è —Ç–µ–≥–æ–≤ –∏ –ª–æ–≥–æ–≤
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Run tests
        run: npm ci && npm run test

      - name: Set Release Version
        run: echo "RELEASE_VERSION=${{ github.run_number }}" >> $GITHUB_ENV

      # --- –ù–û–í–´–ï –®–ê–ì–ò ---

      - name: Create Git Tag for Release
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@github.com"
          git tag "v${{ env.RELEASE_VERSION }}"
          git push origin "v${{ env.RELEASE_VERSION }}"

      - name: Create Release Branch
        run: |
          git checkout -b "releases/v${{ env.RELEASE_VERSION }}"
          git push origin "releases/v${{ env.RELEASE_VERSION }}"

      - name: Get Commit List
        id: get_commits
        run: |
          # –ù–∞—Ö–æ–¥–∏–º —Å–∞–º—ã–π –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ç–µ–≥ –≤ –∏—Å—Ç–æ—Ä–∏–∏
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 $(git rev-list --tags --max-count=1) || echo "")
          # –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–º–∏—Ç–æ–≤ –æ—Ç —Ç–æ–≥–æ —Ç–µ–≥–∞ –¥–æ —Ç–µ–∫—É—â–µ–≥–æ –º–æ–º–µ–Ω—Ç–∞
          COMMIT_LOG=$(git log ${PREVIOUS_TAG}..HEAD --pretty=format:"- %s (%h) by @%an")
          # –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–π –ª–æ–≥ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö —à–∞–≥–æ–≤
          echo "COMMIT_LOG<<EOF" >> $GITHUB_ENV
          echo "$COMMIT_LOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Update CHANGELOG.md
        run: |
          # –î–æ–ø–∏—Å—ã–≤–∞–µ–º –Ω–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –ù–ê–ß–ê–õ–û —Ñ–∞–π–ª–∞
          echo -e "## v${{ env.RELEASE_VERSION }} - $(date +'%Y-%m-%d')\n\n${{ env.COMMIT_LOG }}\n\n---\n\n$(cat CHANGELOG.md)" > CHANGELOG.md
          git add CHANGELOG.md
          git commit -m "docs: update CHANGELOG.md for v${{ env.RELEASE_VERSION }}"
          # –ü—É—à–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å–æ–∑–¥–∞–Ω–Ω—É—é —Ä–µ–ª–∏–∑–Ω—É—é –≤–µ—Ç–∫—É
          git push origin "releases/v${{ env.RELEASE_VERSION }}"

      # --- –ö–û–ù–ï–¶ –ù–û–í–´–• –®–ê–ì–û–í ---

      - name: Login to Yandex Container Registry
        uses: docker/login-action@v3
        with:
          registry: cr.yandex
          username: json_key
          password: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            cr.yandex/${{ env.REGISTRY_ID }}/${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}
            cr.yandex/${{ env.REGISTRY_ID }}/${{ env.IMAGE_NAME }}:latest

      - name: Create GitHub Issue for Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_BODY: |
            ## üöÄ Release v${{ env.RELEASE_VERSION }}
            **Date:** $(date -u)
            **Author:** @${{ github.actor }}
            **Version:** `${{ env.RELEASE_VERSION }}`
            **Docker Image:** `cr.yandex/${{ env.REGISTRY_ID }}/${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}`
            
            ### Commits in this release:
            ${{ env.COMMIT_LOG }}
        run: |
          gh issue create \
            --title "üöÄ Release v${{ env.RELEASE_VERSION }} Ready for Deployment" \
            --body "$ISSUE_BODY"