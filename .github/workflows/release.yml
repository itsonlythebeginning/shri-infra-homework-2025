# .github/workflows/release.yml
name: Create Release

on:
  workflow_dispatch: # –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫

env:
  REGISTRY_ID: ${{ secrets.YC_REGISTRY_ID }}
  IMAGE_NAME: app

jobs:
  build-and-publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Run tests
        run: npm ci && npm run test

      - name: Set Release Version
        run: echo "RELEASE_VERSION=${{ github.run_number }}" >> $GITHUB_ENV

      - name: Login to Yandex Container Registry
        uses: docker/login-action@v3
        with:
          registry: cr.yandex
          username: json_key
          password: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            cr.yandex/${{ env.REGISTRY_ID }}/${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}
            cr.yandex/${{ env.REGISTRY_ID }}/${{ env.IMAGE_NAME }}:latest

      - name: Create GitHub Issue for Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # –ü–æ–º–µ—â–∞–µ–º —Ç–µ–ª–æ Issue –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø—Ä–æ–±–ª–µ–º —Å —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–æ–º
          ISSUE_BODY: |
            Release **${{ env.RELEASE_VERSION }}** was successfully built and published by @${{ github.actor }}.

            - **Version Tag:** `${{ env.RELEASE_VERSION }}`
            - **Docker Image:** `cr.yandex/${{ env.REGISTRY_ID }}/${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}`

            Ready to be deployed to production.
        run: |
          gh issue create \
            --title "üöÄ Release ${{ env.RELEASE_VERSION }} Ready for Deployment" \
            --body "$ISSUE_BODY"